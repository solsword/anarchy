// vim: syntax=c
/**
 * @file: select_tests.cf
 *
 * @description: Unit tests for select.h/c.
 *
 * @author: Peter Mawhorter (pmawhorter@gmail.com)
 */

#include "core/select.h"

int myc_test_parent_child_selection() {
  id parent, index;
  id max_arity = 16;
  id avg_arity = 4;
  id seed = 46571;
  id result;
  for (id tin = 102012; tin < 1928012; tin += 331) {
    myc_select_parent_and_index(
      tin,
      avg_arity,
      max_arity,
      seed,
      &parent,
      &index
    );
    result = myc_select_nth_child(parent, index, avg_arity, max_arity, seed);
    if (result != tin) {
      fprintf(
        stderr,
        "Selection reversibility failed: %lu → %lu#%lu / %lu#%lu → %lu\n",
        tin, parent, index, parent, index, result
      );
      fprintf(stderr, "All children of %lu:\n", parent);
      id nth = 0;
      id child = NONE;
      do {
        child = myc_select_nth_child(parent, nth, avg_arity, max_arity, seed);
        fprintf(stderr, "  #%lu: %lu\n", nth, child);
        nth += 1;
      } while (child != NONE);
      return tin;
    }
  }
  return 0;
}

int myc_test_parent_child_visual() {
  id avg_arity = 4, max_arity = 32;
  id parent = 7182;
  id seed = 191284;
  id nth = 0;
  id child = NONE;
  fprintf(stdout, "\n  %lu", parent);
  for (id i = 0; i < 7; ++i) {
      nth = 0;
      fprintf(stdout, "\n    |\n  ");
      while(1) {
        child = myc_select_nth_child(parent, nth, avg_arity, max_arity, seed);
        if (child == NONE) {
          fprintf(stdout, "|");
          break;
        }
        fprintf(stdout, "%lu---", child);
        nth += 1;
      }
      parent = myc_select_nth_child(parent, 0, avg_arity, max_arity, seed);
      if (parent == NONE) {
        break;
      }
  }
  fprintf(stdout, "\n\n");
  return 0;
}
