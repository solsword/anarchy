// vim: syntax=c
/**
 * @file: unit_tests.f
 *
 * @description: Code fragment defining unit tests for unit.h :P
 *
 * @author: Peter Mawhorter (pmawhorter@gmail.com)
 */

#include "core/unit.h"
#include <stdio.h>

#define TEST_ITERATIONS 256

int myc_test_fold() {
  int i;
  id results[TEST_ITERATIONS];

  results[0] = 10290192;

  for (i = 1; i < TEST_ITERATIONS; ++i) {
    results[i] = myc_fold(results[i-1], 17 + i);
  }

  for (i = TEST_ITERATIONS - 1; i > 0; --i) {
    id x = myc_fold(results[i], 17 + i);
    if (x != results[i-1]) {
      fprintf(
        stderr,
        "Fold test failed at iteration %d: %lu != %lu.\n",
        i, x, results[i-1]
      );
      return i;
    }
  }

  return 0;
}

int myc_test_circular_shift() {
  int i;
  id results[TEST_ITERATIONS];

  results[0] = 10290192;

  for (i = 1; i < TEST_ITERATIONS; ++i) {
    results[i] = myc_circular_shift(results[i-1], 17 + i);
  }

  for (i = TEST_ITERATIONS - 1; i > 0; --i) {
    id x = myc_rev_circular_shift(results[i], 17 + i);
    if (x != results[i-1]) {
      fprintf(
        stderr,
        "Circular shift test failed at iteration %d: %lu != %lu.\n",
        i, x, results[i-1]
      );
      return i;
    }
  }

  return 0;
}

#define FLOP_TESTS 4

int myc_test_flop() {
  int i;
  id results[FLOP_TESTS];

  results[0] = 10290192;

  for (i = 1; i < FLOP_TESTS; ++i) {
    results[i] = myc_flop(results[i-1]);
  }

  for (i = FLOP_TESTS - 1; i > 0; --i) {
    id x = myc_flop(results[i]);
    if (x != results[i-1]) {
      fprintf(
        stderr,
        "Flop test failed at iteration %d: %lu != %lu.\n",
        i, x, results[i-1]
      );
      return i;
    }
  }

  return 0;
}

int myc_test_prng() {
  int i;
  id results[TEST_ITERATIONS];

  results[0] = 10290192;

  for (i = 1; i < TEST_ITERATIONS; ++i) {
    results[i] = myc_prng(results[i-1], 17 + i);
  }

  for (i = TEST_ITERATIONS - 1; i > 0; --i) {
    id x = myc_rev_prng(results[i], 17 + i);
    if (x != results[i-1]) {
      fprintf(
        stderr,
        "PRNG test failed at iteration %d: %lu != %lu.\n",
        i, x, results[i-1]
      );
      return i;
    }
  }

  return 0;
}

int myc_test_prng_spew() {
  int i;
  id x = 65;
  fprintf(stdout, "Spew test:\n");
  for (int line = 0; line < 10; ++line) {
    for (i = 0; i < 80; ++i) {
      x = myc_prng(x, 45);
      fputc((char) (32 + (x % 10)), stdout);
    }
    fputc('\n', stdout);
  }

  return 0;
}
